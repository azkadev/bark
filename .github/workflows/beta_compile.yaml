name: Beta Cross platform
on: [workflow_dispatch]

jobs:
  build:
    name: Compile Program dart cross platform @azkadev
    runs-on: ${{ matrix.os }}
    env:
      DEBIAN_FRONTEND: noninteractive
      GITHUB_TOKEN: ${{ secrets.TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            output-name: linux
          - os: macOS-latest
            output-name: macos
          - os: windows-latest
            output-name: windows

    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=v$(date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: "15"
          distribution: "adopt"
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          channel: "stable"
      - name: check dart version
        run: dart --version
      - name: Install Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update -y
            sudo apt-get install -y make git zlib1g-dev libssl-dev gperf cmake clang libc++-dev libc++abi-dev php-cli cmake g++
            sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install node
            npm install -g appdmg
          fi
        shell: bash
      - name: Install Dependencies App
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y libmpv-dev mpv webkit2gtk-4.0-dev
          fi
        shell: bash
      - name: Mkdir build
        run: mkdir build
      - name: Set Flutter enable devices
        continue-on-error: true
        run: |
          flutter config --enable-web
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
          flutter config --enable-android
          flutter config --enable-ios
        
      # Compile Template
      - name: Compile Application app_template
        continue-on-error: true
        shell: bash
        run: |
          cd lib/template/app_template
          flutter pub get

          flutter pub run packagex create .
          flutter pub run packagex build all
          if [ "$RUNNER_OS" == "Linux" ]; then
            mv build/packagex/* ../../../build
          fi
          if [ "$RUNNER_OS" == "Windows" ]; then 
            mv build/packagex/* ../../../build
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            mv build/packagex/* ../../../build
          fi
          flutter clean


      - name: Compile Package bark_dart
        continue-on-error: true
        shell: bash
        run: |
          cd package/bark_dart
          flutter pub get

          flutter pub run packagex create .
          flutter pub run packagex build all
          if [ "$RUNNER_OS" == "Linux" ]; then
            mv build/packagex/* ../../build
          fi
          if [ "$RUNNER_OS" == "Windows" ]; then 
            mv build/packagex/* ../../build
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            mv build/packagex/* ../../build
          fi
          flutter clean

      - name: Compile Package bark_flutter
        continue-on-error: true
        shell: bash
        run: |
          cd package/bark_flutter
          flutter pub get

          flutter pub run packagex create .
          flutter pub run packagex build all
          if [ "$RUNNER_OS" == "Linux" ]; then
            mv build/packagex/* ../../build
          fi
          if [ "$RUNNER_OS" == "Windows" ]; then 
            mv build/packagex/* ../../build
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            mv build/packagex/* ../../build
          fi
          flutter clean

      - name: Publish artifact
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: Artifact
          path: build/*
      - name: Publish Release
        uses: marvinpinto/action-automatic-releases@latest
        continue-on-error: true
        with:
          repo_token: ${{ secrets.TOKEN }}
          automatic_release_tag: "beta-${{ matrix.output-name }}"
          prerelease: false
          title: "Release ${{ matrix.output-name }}"
          files: |
            build/*
